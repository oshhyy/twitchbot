"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteMsg = exports.MessageDeleteError = void 0;
const await_response_1 = require("../await/await-response");
const conditions_1 = require("../await/conditions");
const errors_1 = require("../client/errors");
const channel_1 = require("../validation/channel");
const privmsg_1 = require("./privmsg");
class MessageDeleteError extends errors_1.MessageError {
    channelName;
    messageID;
    constructor(channelName, messageID, message, cause) {
        super(message, cause);
        this.channelName = channelName;
        this.messageID = messageID;
    }
}
exports.MessageDeleteError = MessageDeleteError;
const failureNoticeIDs = [
    "no_permission",
    "bad_delete_message_admin",
    "bad_delete_message_anon",
    "bad_delete_message_broadcaster",
    "bad_delete_message_global_mod",
    "bad_delete_message_mod",
    "bad_delete_message_self",
    "bad_delete_message_staff",
    "usage_delete",
];
const successNoticeIDs = ["delete_message_success", "already_deleted"];
async function deleteMsg(conn, channelName, messageID) {
    (0, channel_1.validateChannelName)(channelName);
    const cmd = `/delete ${messageID}`;
    await (0, privmsg_1.sendPrivmsg)(conn, channelName, cmd);
    await (0, await_response_1.awaitResponse)(conn, {
        success: (0, conditions_1.matchingNotice)(channelName, successNoticeIDs),
        failure: (0, conditions_1.matchingNotice)(channelName, failureNoticeIDs),
        errorType: (msg, cause) => new MessageDeleteError(channelName, messageID, msg, cause),
        errorMessage: `Failed to delete ${messageID} in #${channelName}`,
    });
}
exports.deleteMsg = deleteMsg;
//# sourceMappingURL=deleteMsg.js.map